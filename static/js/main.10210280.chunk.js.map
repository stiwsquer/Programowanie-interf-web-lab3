{"version":3,"sources":["components/Form.js","components/Post.js","components/List.js","App.js","reportWebVitals.js","index.js"],"names":["hashCode","str","hash","length","i","charCodeAt","Form","props","className","value","inputName","onChange","e","setInputName","target","type","placeholder","inputEmail","setInputEmail","inputDescription","setInputDescription","inputTags","setInputTags","onClick","preventDefault","setPosts","posts","show","id","name","email","des","tags","Post","List","map","post","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10210280.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction hashCode(str){\r\n  let hash = 0;\r\n  if (str.length === 0)return hash;\r\n  for (let i=0; i<str.length; i++){\r\n      let char = str.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + char;\r\n      hash = hash & hash; //convert to 32bit integer\r\n  }\r\n  return hash;\r\n}\r\n\r\nconst Form = (props) =>{\r\n\r\n    const inputNameHandler = (e) =>{\r\n        \r\n        props.setInputName(e.target.value);\r\n    }\r\n    const inputEmailHandler = (e) =>{\r\n        props.setInputEmail(e.target.value);\r\n    }\r\n    const inputDesHandler = (e) =>{\r\n        props.setInputDescription(e.target.value);\r\n    }\r\n    const inputTagsHandler = (e) =>{\r\n        props.setInputTags(e.target.value);\r\n    }\r\n    const submitFormHandler = (e) =>{\r\n        e.preventDefault();\r\n        props.setPosts([\r\n            ...props.posts, {show: true, id: hashCode(props.inputDescription), name: props.inputName, email: props.inputEmail, des: props.inputDescription, tags: props.inputTags}\r\n        ])\r\n        props.setInputName(\"\");\r\n        props.setInputEmail(\"\");\r\n        props.setInputDescription(\"\");\r\n        props.setInputTags(\"\");\r\n    }\r\n\r\n    return(\r\n    <form >\r\n    <div className=\"input__box\">\r\n      <input value={props.inputName} onChange={inputNameHandler} type=\"text\" placeholder=\"Name\" className=\"todo-input\" />\r\n      <input value={props.inputEmail} onChange={inputEmailHandler} type=\"text\" placeholder=\"Email\" className=\"todo-input\" />\r\n      <input value={props.inputDescription} onChange={inputDesHandler} type=\"text\" placeholder=\"Description\" className=\"todo-input\" />\r\n      <input value={props.inputTags} onChange={inputTagsHandler} type=\"text\" placeholder=\"Tags\" className=\"todo-input\" />\r\n      <button onClick={submitFormHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n    </div>\r\n   \r\n    </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nconst Post = (props) =>{\r\n    return(\r\n        <div className=\"todo\">\r\n            <li className=\"todo-item\">\r\n                <p><strong>Name:</strong>  {props.name}</p>\r\n            </li>\r\n            <li className=\"todo-item\">\r\n                <p><strong>Email:</strong> {props.email}</p>\r\n            </li>\r\n            <li className=\"todo-item\">\r\n                <p><strong>Des:</strong> {props.des}</p>\r\n            </li>\r\n            <li className=\"todo-item\">\r\n                <p><strong>Tags:</strong> {props.tags}</p>\r\n            </li>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport Post from \"./Post\";\r\n\r\nconst List = (props) =>{\r\n    \r\n    return(\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {props.posts.map(post =>(\r\n                    <Post \r\n                    key={post.id}\r\n                    name={post.name}\r\n                    email={post.email}\r\n                    des={post.des}\r\n                    tags={post.tags}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default List;","import React, {useState} from \"react\";\nimport './App.css';\nimport Form from \"./components/Form\";\nimport List from \"./components/List\";\n\n\nfunction App() {\n  const [inputName, setInputName] = useState(\"\");\n  const [inputEmail, setInputEmail] = useState(\"\");\n  const [inputDescription, setInputDescription] = useState(\"\");\n  const [inputTags, setInputTags] = useState(\"\");\n  const [posts, setPosts]  = useState([]);\n\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Tinder...for projects</h1>\n      </header>\n      <Form \n      inputName={inputName}\n      inputEmail={inputEmail}\n      inputDescription={inputDescription}\n      inputTags={inputTags}\n      setInputName={setInputName}\n      setInputEmail={setInputEmail}\n      setInputDescription={setInputDescription}\n      setInputTags={setInputTags}\n      setPosts={setPosts}\n      posts={posts}/>\n     \n      <br/>\n      <br/>\n      <br/>\n      \n      <List\n\n      posts={posts}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}